// Code generated by protoc-gen-go. DO NOT EDIT.
// source: customer.proto

package customer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Address struct {
	Street               string   `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	City                 string   `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Zip                  string   `protobuf:"bytes,4,opt,name=zip,proto3" json:"zip,omitempty"`
	IsShippingAddress    bool     `protobuf:"varint,5,opt,name=isShippingAddress,proto3" json:"isShippingAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Address) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Address) GetIsShippingAddress() bool {
	if m != nil {
		return m.IsShippingAddress
	}
	return false
}

type CustomerRequest struct {
	Id                   int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string     `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string     `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Addresses            []*Address `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CustomerRequest) Reset()         { *m = CustomerRequest{} }
func (m *CustomerRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerRequest) ProtoMessage()    {}
func (*CustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{1}
}

func (m *CustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerRequest.Unmarshal(m, b)
}
func (m *CustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerRequest.Marshal(b, m, deterministic)
}
func (m *CustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerRequest.Merge(m, src)
}
func (m *CustomerRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerRequest.Size(m)
}
func (m *CustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerRequest proto.InternalMessageInfo

func (m *CustomerRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CustomerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomerRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CustomerRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CustomerRequest) GetAddresses() []*Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type CustomerResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerResponse) Reset()         { *m = CustomerResponse{} }
func (m *CustomerResponse) String() string { return proto.CompactTextString(m) }
func (*CustomerResponse) ProtoMessage()    {}
func (*CustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{2}
}

func (m *CustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerResponse.Unmarshal(m, b)
}
func (m *CustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerResponse.Marshal(b, m, deterministic)
}
func (m *CustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerResponse.Merge(m, src)
}
func (m *CustomerResponse) XXX_Size() int {
	return xxx_messageInfo_CustomerResponse.Size(m)
}
func (m *CustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerResponse proto.InternalMessageInfo

func (m *CustomerResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CustomerResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type CustomFilter struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomFilter) Reset()         { *m = CustomFilter{} }
func (m *CustomFilter) String() string { return proto.CompactTextString(m) }
func (*CustomFilter) ProtoMessage()    {}
func (*CustomFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_9efa92dae3d6ec46, []int{3}
}

func (m *CustomFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomFilter.Unmarshal(m, b)
}
func (m *CustomFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomFilter.Marshal(b, m, deterministic)
}
func (m *CustomFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomFilter.Merge(m, src)
}
func (m *CustomFilter) XXX_Size() int {
	return xxx_messageInfo_CustomFilter.Size(m)
}
func (m *CustomFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomFilter.DiscardUnknown(m)
}

var xxx_messageInfo_CustomFilter proto.InternalMessageInfo

func (m *CustomFilter) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func init() {
	proto.RegisterType((*Address)(nil), "customer.Address")
	proto.RegisterType((*CustomerRequest)(nil), "customer.CustomerRequest")
	proto.RegisterType((*CustomerResponse)(nil), "customer.CustomerResponse")
	proto.RegisterType((*CustomFilter)(nil), "customer.CustomFilter")
}

func init() { proto.RegisterFile("customer.proto", fileDescriptor_9efa92dae3d6ec46) }

var fileDescriptor_9efa92dae3d6ec46 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4d, 0x4f, 0x32, 0x31,
	0x10, 0xc7, 0xe9, 0xf2, 0x3e, 0x0f, 0xe1, 0x81, 0x89, 0x21, 0x2b, 0x27, 0xb2, 0xa7, 0x3d, 0x18,
	0x34, 0x78, 0xf5, 0x62, 0x88, 0x1a, 0xaf, 0xeb, 0x27, 0x58, 0x77, 0x27, 0xd2, 0x08, 0xdb, 0xda,
	0x96, 0x18, 0xfc, 0x0a, 0xde, 0x3c, 0xfb, 0x61, 0x4d, 0xbb, 0x2d, 0x18, 0xd1, 0xdb, 0xfc, 0xff,
	0x9d, 0x97, 0xdf, 0x4c, 0x0a, 0xc3, 0x62, 0xab, 0x8d, 0xd8, 0x90, 0x9a, 0x4b, 0x25, 0x8c, 0xc0,
	0x5e, 0xd0, 0xc9, 0x3b, 0x83, 0xee, 0x75, 0x59, 0x2a, 0xd2, 0x1a, 0x27, 0xd0, 0xd1, 0x46, 0x11,
	0x99, 0x98, 0xcd, 0x58, 0xda, 0xcf, 0xbc, 0x42, 0x84, 0x56, 0xc1, 0xcd, 0x2e, 0x8e, 0x9c, 0xeb,
	0x62, 0x3c, 0x81, 0xb6, 0x36, 0xb9, 0xa1, 0xb8, 0xe9, 0xcc, 0x5a, 0xe0, 0x08, 0x9a, 0x6f, 0x5c,
	0xc6, 0x2d, 0xe7, 0xd9, 0x10, 0xcf, 0x60, 0xcc, 0xf5, 0xc3, 0x8a, 0x4b, 0xc9, 0xab, 0x27, 0x3f,
	0x28, 0x6e, 0xcf, 0x58, 0xda, 0xcb, 0x8e, 0x1f, 0x92, 0x0f, 0x06, 0xff, 0x97, 0x1e, 0x2d, 0xa3,
	0x97, 0x2d, 0x69, 0x83, 0x43, 0x88, 0x78, 0xe9, 0x88, 0xda, 0x59, 0xc4, 0x4b, 0x4b, 0x53, 0xe5,
	0x1b, 0x0a, 0x34, 0x36, 0xb6, 0x34, 0xb4, 0xc9, 0xf9, 0x3a, 0xd0, 0x38, 0x61, 0x5d, 0xb9, 0x12,
	0x15, 0x79, 0x9e, 0x5a, 0xe0, 0x39, 0xf4, 0xf3, 0x7a, 0x1c, 0x59, 0x92, 0x66, 0xfa, 0x6f, 0x31,
	0x9e, 0xef, 0xef, 0xe3, 0x49, 0xb2, 0x43, 0x4e, 0x72, 0x05, 0xa3, 0x03, 0x93, 0x96, 0xa2, 0xd2,
	0x74, 0x04, 0x15, 0x43, 0x57, 0x6f, 0x8b, 0xc2, 0x2e, 0x17, 0xb9, 0xe5, 0x82, 0x4c, 0x52, 0x18,
	0xd4, 0xd5, 0xb7, 0x7c, 0x6d, 0x48, 0xd9, 0xcc, 0x67, 0xda, 0xbd, 0x0a, 0x55, 0xfa, 0x2b, 0x07,
	0xb9, 0xf8, 0x64, 0xd0, 0x0b, 0x83, 0xf0, 0x06, 0x06, 0x77, 0x64, 0x82, 0xd4, 0x38, 0x39, 0x20,
	0x7e, 0x6f, 0x37, 0x3d, 0xfd, 0xe9, 0xef, 0x0f, 0x97, 0x34, 0x2e, 0x18, 0xde, 0xc3, 0x70, 0xa9,
	0x28, 0x37, 0xb4, 0x6f, 0xfc, 0x77, 0xc1, 0x74, 0xfa, 0xdb, 0x53, 0xbd, 0x70, 0xd2, 0x78, 0xec,
	0xb8, 0xaf, 0x73, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0x18, 0xb9, 0x99, 0x65, 0x4c, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomerClient is the client API for Customer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerClient interface {
	GetCustomers(ctx context.Context, in *CustomFilter, opts ...grpc.CallOption) (Customer_GetCustomersClient, error)
	CreateCustomer(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*CustomerResponse, error)
}

type customerClient struct {
	cc *grpc.ClientConn
}

func NewCustomerClient(cc *grpc.ClientConn) CustomerClient {
	return &customerClient{cc}
}

func (c *customerClient) GetCustomers(ctx context.Context, in *CustomFilter, opts ...grpc.CallOption) (Customer_GetCustomersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Customer_serviceDesc.Streams[0], "/customer.Customer/GetCustomers", opts...)
	if err != nil {
		return nil, err
	}
	x := &customerGetCustomersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Customer_GetCustomersClient interface {
	Recv() (*CustomerRequest, error)
	grpc.ClientStream
}

type customerGetCustomersClient struct {
	grpc.ClientStream
}

func (x *customerGetCustomersClient) Recv() (*CustomerRequest, error) {
	m := new(CustomerRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *customerClient) CreateCustomer(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*CustomerResponse, error) {
	out := new(CustomerResponse)
	err := c.cc.Invoke(ctx, "/customer.Customer/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServer is the server API for Customer service.
type CustomerServer interface {
	GetCustomers(*CustomFilter, Customer_GetCustomersServer) error
	CreateCustomer(context.Context, *CustomerRequest) (*CustomerResponse, error)
}

// UnimplementedCustomerServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerServer struct {
}

func (*UnimplementedCustomerServer) GetCustomers(req *CustomFilter, srv Customer_GetCustomersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCustomers not implemented")
}
func (*UnimplementedCustomerServer) CreateCustomer(ctx context.Context, req *CustomerRequest) (*CustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}

func RegisterCustomerServer(s *grpc.Server, srv CustomerServer) {
	s.RegisterService(&_Customer_serviceDesc, srv)
}

func _Customer_GetCustomers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CustomFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CustomerServer).GetCustomers(m, &customerGetCustomersServer{stream})
}

type Customer_GetCustomersServer interface {
	Send(*CustomerRequest) error
	grpc.ServerStream
}

type customerGetCustomersServer struct {
	grpc.ServerStream
}

func (x *customerGetCustomersServer) Send(m *CustomerRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _Customer_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.Customer/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).CreateCustomer(ctx, req.(*CustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Customer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.Customer",
	HandlerType: (*CustomerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustomer",
			Handler:    _Customer_CreateCustomer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCustomers",
			Handler:       _Customer_GetCustomers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "customer.proto",
}
